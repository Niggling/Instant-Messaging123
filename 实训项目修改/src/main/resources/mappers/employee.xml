<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "com.example.demo.mapper.seven.EmployeeMapper">

        <insert id = 'insertEmployee'>
           insert into employee values(#{employeeID},#{name}, #{sex},#{phone} ,#{email},#{address})
       </insert>

    <!--    &lt;!&ndash;void updateProject();&ndash;&gt;-->
    <!--    <update id="updateProject">-->
    <!--        update user set user='这是被修改过的第二个示例'where projectID = 001001002-->
    <!--    </update>-->

    <update id="updateEmployee">
        update employee set name=#{name}, sex=#{sex},phone=#{phone} ,email = #{email},address =#{address} where employeeID=#{employeeID}
    </update>

    <select id="selectAllOutline" resultType="com.example.demo.pojo.seven.Outline">
        select * from outline
    </select>
    <!--    把小明和password变成动态的什么东西-->
    <!--    <select id="selectProjectById" resultType="com.example.demo.pojo.seven.userservice">-->
    <!--        select * from user where username = "小明" and password = 123-->
    <!--    </select>-->
    <select id="selectEmployeeById" resultType="com.example.demo.pojo.seven.Employee">
        select * from employee where employeeID=#{employeeID}
    </select>

    <select id="selectEmployeeidByname" resultType="com.example.demo.pojo.seven.Employee">
        select employeeID from employee where name=#{name}
    </select>


    <select id="selectMailById" resultType="com.example.demo.pojo.seven.Employee">
        select email from employee where employeeID=#{employeeID}
    </select>
    <!--resultType:设置默认的映射关系，resultMap:设置自定义的映射-->
    <!--    <delete id="deleteProject">-->
    <!--        delete from user where projectID = 001001004-->
    <!--    </delete>-->
</mapper>

